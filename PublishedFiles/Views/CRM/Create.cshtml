@model MVCFirebase.Models.CRM

@{
    ViewBag.Title = "Create";
}
<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.3/jquery-ui-timepicker-addon.min.js"></script>
<link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.3/jquery-ui-timepicker-addon.min.css" type="text/css" />
<script type="text/javascript">
    $(function () {
        $("#nextmeetingdate").datetimepicker({
            minDate: 0
        }).attr('readonly', 'readonly');
        var d = new Date($.now());
        var formattedDate = (d.getMonth() + 1) + "/" + d.getDate() + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
        $("#nextmeetingdate").val(formattedDate);

        $("#city").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/CRM/cityautocomplete/',
                    data: "{ 'city': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                        response($.map(data, function (item) {

                            return {
                                label: item.name,
                                value: item.name
                            };
                            //return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            change: function (e, i) {
                //If the No match found" u.item will return null, clear the TextBox.
                if (i.item == null) {
                    //Clear the AutoComplete TextBox.
                    $(this).val("");
                    return false;
                }
            },
            select: function (e, i) {
                e.preventDefault();
                //alert('you have selected ' + i.item.label + ' ID: ' + i.item.value);
                //$("#hfinventoryid").val(i.item.value);
                //$("#hfquantitybalance").val(i.item.label);
                $(this).val(i.item.value);

            },
            minLength: 1
        });
    });
</script>
<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>CRM</h4>
    <hr />
    <div class="container py-5">
        <div class="row">
            <div class="col-md-10 mx-auto">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group row">
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Refered By:</label>

                        @Html.EditorFor(model => model.referedby, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.referedby, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Clinic Type:</label>

                        @Html.DropDownListFor(model => model.clinictype, (IEnumerable<SelectListItem>)ViewBag.CLINICTYPE, new { @class = "select2_demo_4 form-control" })
                        @Html.ValidationMessageFor(model => model.clinictype, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Next Meeting Date:</label>

                        @Html.EditorFor(model => model.nextmeetingdate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nextmeetingdate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Clinic Name:</label>

                        @Html.EditorFor(model => model.clinicname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.clinicname, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="form-group row">
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Doctor Name:</label>

                        @Html.EditorFor(model => model.doctorname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.doctorname, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Mobile:</label>

                        @Html.EditorFor(model => model.contact, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-sm-3">

                    </div>
                    <div class="col-sm-3">

                    </div>

                </div>
                <div class="form-group row">
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Address 1:</label>

                        @Html.EditorFor(model => model.address1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address1, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Address 2:</label>

                        @Html.EditorFor(model => model.address2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address2, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Address 3:</label>

                        @Html.EditorFor(model => model.address3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address3, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">City:</label>

                        @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="form-group row">
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">State:</label>

                        @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Pin Code:</label>

                        @Html.EditorFor(model => model.pin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pin, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Status:</label>
                        @Html.DropDownListFor(model => model.status, (IEnumerable<SelectListItem>)ViewBag.STATUS, new { @class = "select2_demo_4 form-control" })
                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">

                    </div>

                </div>
                <div class="form-group row">
                    <div class="col-sm-3">
                        <label for="inputAddressLine1">Comment:</label>@Html.TextAreaFor(model => model.comments, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.comments, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        
                    </div>


                    <div class="col-sm-3">

                    </div>
                    <div class="col-sm-3">

                    </div>

                </div>
                <div class="form-group row">
                    <div class="col-sm-3">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                    <div class="col-sm-3">
                        
                    </div>


                    <div class="col-sm-3">

                    </div>
                    <div class="col-sm-3">

                    </div>

                </div>
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
