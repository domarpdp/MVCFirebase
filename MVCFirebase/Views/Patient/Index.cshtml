@model IEnumerable<MVCFirebase.Models.Patient>

@{
    ViewBag.Title = "Index";
}
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.3/jquery-ui-timepicker-addon.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.3/jquery-ui-timepicker-addon.min.css" />*@

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
<link href="~/Scripts/css/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Scripts/css/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
<style>
    .downloadBackground {
        position: absolute;
        top: 0;
        left: 0;
        width: 98vw;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: transparent;
        z-index: 9999;
    }
</style>
<script>
    jQuery(function ($) {
        //$("#search").change(function () {
        //    alert('amang');
        //});

        $("#datepicker").datetimepicker({
            dateFormat: 'dd-M-yy', // Set the date format
            minDate: 0 // Disallow past dates
        }).attr('readonly', 'readonly').change(function () {
            $('#tokennumber').html('');
            var selection1 = $('#datepicker').val();
            var selection2 = $('#patientAutoId').val();
            if (selection1.length > 0) {

                $.ajax({
                    url: "/Patient/getLatestToken", // URL for the request
                    type: "POST", // HTTP method
                    data: { futureAppointmentDate: selection1 }, // Data to send to the server
                    success: function (data) {
                        // Update the token number input field with the received data
                        $('#tokennumber').val(data);
                    },
                    error: function (xhr, status, error) {
                        // Log any errors for debugging
                        console.error("Error: " + error);
                        console.error("Status: " + status);
                        console.error("Response: " + xhr.responseText);
                    }
                });
            }
        });
    });
</script>
<script>
    $(function () {
        $('.modal-link').click(function () {
            //$.post("/Patient/getCurrentServerDate", { xyz: "test" },
            //    function (data) {
            //        alert(data);
            //        var d = new Date(data);
            //        var formattedDate = (d.getMonth() + 1) + "/" + d.getDate() + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
            //        $("#datepicker").val(formattedDate);
            //    })


            $('#patientAutoId').val($(this).attr('data-id'));
            var d = new Date($.now());
            //var formattedDate = (d.getMonth() + 1) + "/" + d.getDate() + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();

            var d = new Date($.now());

            // Array of month names
            var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

            // Get the components of the date
            var day = d.getDate();
            var month = monthNames[d.getMonth()]; // Get the month name from the array
            var year = d.getFullYear();
            var hours = d.getHours();
            var minutes = d.getMinutes();
            var seconds = d.getSeconds();

            // Add leading zero to day, hours, minutes, and seconds if needed
            day = day < 10 ? "0" + day : day;
            hours = hours < 10 ? "0" + hours : hours;
            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;

            // Format the date as dd-MMM-yyyy HH:mm:ss
            var formattedDate = day + "-" + month + "-" + year + " " + hours + ":" + minutes + ":" + seconds;

            console.log(formattedDate);
            $("#datepicker").val(formattedDate);
            //$.post("/Patient/getLatestToken", { futureAppointmentDate: formattedDate },
            //    function (data) {
            //        console.log('token No:' + data);

            //        $('#tokennumber').val(data);
            //    })
            $.ajax({
                url: "/Patient/getLatestToken", // URL of the API or endpoint
                type: "POST", // HTTP method
                data: { futureAppointmentDate: formattedDate }, // Data to send to the server
                success: function (data) {
                    console.log('token No:' + data);

                    // Update the token number input field
                    $('#tokennumber').val(data);
                },
                error: function (xhr, status, error) {
                    console.error("Error: " + error);
                    console.error("Status: " + status);
                    console.error("Response: " + xhr.responseText);
                }
            });
            console.log('token No:' + $('#tokennumber').val());
        });
        $('#tokennumber').change(function () {
            //alert('amang');
        });
    });
    //function MyFunction() {
    //    var searchData = $('#search').val();
    //    $.post("/Patient/Index", { search: searchData },
    //        function (data) {
    //            $("#divContent").html(data);
    //            $('#search').focus();
    //        })

    //}


</script>
<div id="divContent">

    <h2>Patients</h2>
    <h3>@ViewBag.ErrorMessage</h3>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <p>
        @using (@Html.BeginForm("Index", "Patient", FormMethod.Post))
        {
            @*@Html.TextBox("search", "", new { onkeyup = "MyFunction();" }) <input type="submit" value="search" />*@
            @Html.TextBox("search") <input type="submit" value="search" />
            @*<button type="button" id="ajaxButton">Download Patients</button>*@
        }
    </p>

    <table class="table">
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.patient_id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.patient_name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.patient_mobile_number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.disease)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.city)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.patient_id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.patient_name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.patient_mobile_number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.disease)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.city)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                    @*@Html.ActionLink("Add Prescriptions", "AddPres", new { id = item.id }) |*@
                    <a class="modal-link" data-id="@item.id" data-toggle="modal" data-target=".bootstrapmodal">Add Appointment</a>
                </td>
            </tr>
        }

    </table>

    @using (Html.BeginForm("CreateFutureAppointment", "Patient", FormMethod.Post))
    {
        <div class="form-horizontal">
            <div class="modal fade bootstrapmodal">
                <div class="modal-dialog">

                    <div class="modal-content">
                        <div class="modal-header">
                            <button data-dismiss="modal" class="close"><span>&times;</span></button>
                            Please Select Appointment Date
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <div class="col-md-5">
                                    @Html.Label("StartDate", "Start Date:")
                                </div>

                                <div class="col-md-5">
                                    <input class="form-control" name="datepicker" type="text" id="datepicker">
                                </div>

                            </div>
                            <div class="form-group">
                                <div class="col-md-5">
                                    @Html.Label("TokenNumber", "Token Number:")
                                </div>

                                <div class="col-md-5">
                                    <input class="form-control" name="tokennumber" type="number" min="0" step="1" max="10000" id="tokennumber">
                                </div>

                            </div>
                            <div class="form-group">
                                <div class="col-md-5">
                                    @Html.Label("ReferTo", "Refer To:")
                                </div>

                                <div class="col-md-5">
                                    @Html.DropDownList("referto", (IEnumerable<SelectListItem>)ViewBag.USERS, new { @class = "select2_demo_4 form-control" })
                                </div>
                            </div>

                        </div>

                        <input type="hidden" class="form-control" name="patientAutoId" id="patientAutoId" value="" />

                        <div class="modal-footer">
                            <div class="form-group">
                                <div class="col-md-1">
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
</div>

<div id="loader" class="downloadBackground" style="display:none;">
    <img src="~/Images/Downloading.gif" />
</div>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@if (@TempData["Message"] != null)
{
    <script type="text/javascript">
            $(function () {
                alert("@TempData["Message"]")
            });
    </script>

}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript">
        @*$(document).ready(function ()
        {
            $('#ajaxButton').click(function () {
                var searchValue = $('#search').val(); // Capture the input value
                $('#loader').show();
                $.ajax({
                    url: '@Url.Action("DownloadPatientData", "Patient")',
                    type: 'POST',
                    data: {},
                    success: function (response) {
                        // Hide the loader
                        $('#loader').hide();
                        // Handle success, update the UI accordingly
                        alert('Method called successfully!');
                    },
                    error: function (error) {

                        // Hide the loader
                        $('#loader').hide();
                        // Handle error
                        alert('Error occurred');
                    }
                });
            });
        });*@
</script>

