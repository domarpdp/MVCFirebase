<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0 user-scalable=no, maximum-scale=1.0">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <title>@ViewBag.Title Green Paper Technology</title>
    <link rel="manifest" href="~/Content/manifest.json">
    <link href="~/Content/style.css" rel="stylesheet" />
    <!-- Bootstrap CSS -->
    <!--<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
          integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">-->

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

    <script>
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/Scripts/service-worker.js')
                .then(function (registration) {
                    console.log('Service Worker registered with scope:', registration.scope);
                }).catch(function (error) {
                    console.error('Service Worker registration failed:', error);
                });
        }
    </script>
</head>
<body>
    <div class="container body-content p-0 m-0" style="max-width:100%; margin: 0 auto!important;">
        @RenderBody()
    </div>
    <script>
        const drawer = document.getElementById('drawer');
        const openDrawerButton = document.getElementById('openDrawer');

        openDrawerButton.addEventListener('click', () => {
            drawer.classList.toggle('hidden');
        });
    </script>
    @*<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
            integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
            integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
            crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"
            integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV"
            crossorigin="anonymous"></script>*@

    <script>
        const drawer = document.getElementById('drawer');
        const openDrawerButton = document.getElementById('openDrawer');

        // Open drawer on button click
        openDrawerButton.addEventListener('click', (event) => {
            drawer.classList.toggle('hidden');
            event.stopPropagation(); // Prevents click event from propagating
        });

        // Close drawer when clicking outside
        document.addEventListener('click', (event) => {
            // Debugging log to check which element is clicked
            console.log('Clicked element:', event.target);

            if (
                drawer.classList.contains('hidden') && // Drawer is visible
                !drawer.contains(event.target) && // Click is outside the drawer
                event.target !== openDrawerButton // Click is not on the open button
            ) {
                drawer.classList.remove('hidden');
            }
        });

        // Prevent clicks inside the drawer from closing it
        drawer.addEventListener('click', (event) => {
            event.stopPropagation();
        });

    </script>

    @RenderSection("scripts", required: false)

    @*<script>
            if ('serviceWorker' in navigator) {
                navigator.serviceWorker
                    .register('/Scripts/service-worker.js')
                    .then((registration) => {
                        console.log('Service Worker registered with scope:', registration.scope);

                        // Listen for messages from the Service Worker
                        navigator.serviceWorker.addEventListener('message', (event) => {
                            if (event.data.action === 'saveLastPath') {
                                localStorage.setItem('lastPath', event.data.path);
                                console.log('localStorage:', event.data.path);
                            }

                            console.log('out side localStorage:', event.data , event.data.path);
                        });

                        // Redirect to the last saved path on page load
                        const lastPath = localStorage.getItem('lastPath');
                        if (lastPath && location.pathname === '/') {
                            location.replace(lastPath);
                            console.log('Service Worker registered with scope:', registration.scope);
                        }
                    })
                    .catch((error) => {
                        console.error('Service Worker registration failed:', error);
                    });
            }
        </script>*@



</body>
</html>

